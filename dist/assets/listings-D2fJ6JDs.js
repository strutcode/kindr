import{Q as b,k as p,y as a,u as S}from"./index-Cwfaiojx.js";const c=s=>{var l,g,d,f,_;return{...s,location:{lat:((l=s.location)==null?void 0:l.coordinates[1])??-47,lng:((g=s.location)==null?void 0:g.coordinates[0])??168},user:{id:((d=s.user)==null?void 0:d.id)??"",full_name:((f=s.user)==null?void 0:f.full_name)??"Unknown User",avatar_url:((_=s.user)==null?void 0:_.avatar_url)??null}}},B=b("listings",()=>{const s=p([]),l=p([]);return{listings:s,userListings:l,fetchListings:async()=>{try{const t=await a.from("listings").select("*, user:users!listings_user_id_fkey(id, full_name, avatar_url)").eq("active",!0).order("created_at",{ascending:!1});if(t.error)throw t.error;s.value=t.data.map(c)}catch(t){console.error("Error fetching listings:",t)}},fetchSingleListing:async t=>{try{const{data:r,error:e}=await a.from("listings").select("*, user:users!listings_user_id_fkey(id, full_name, avatar_url)").eq("id",t).single();if(e)throw e;if(r){const i=c(r);return s.value.push(i),i}}catch(r){console.error("Error fetching single listing:",r)}return null},fetchUserListings:async t=>{try{const{data:r,error:e}=await a.from("listings").select().eq("user_id",t).order("created_at",{ascending:!1});if(e)throw e;l.value=r.map(c)}catch(r){console.error("Error fetching user listings:",r)}},fetchListingsInBounds:async(t,r)=>{try{const{north:e,south:i,east:n,west:o}=t,{search:v,category:h,subcategory:y,activeOnly:w}=r??{},{data:L,error:m}=await a.rpc("get_listings_in_bounds",{north:e,south:i,east:n,west:o,p_search:(v??"").trim()||null,p_category:h||null,p_subcategory:h&&y||null,p_active:w,p_limit:99});if(m)throw m;const E=u=>({...u,user:{id:u.user_id,full_name:u.user_full_name,avatar_url:u.user_avatar_url}});debugger;s.value=L.map(E).map(c)}catch(e){console.error("Error fetching listings in bounds:",e)}},searchListings:async t=>{try{const{data:r,error:e}=await a.from("listings").select("*").textSearch("title_description_tags",t);if(e)throw e;return s.value=r.map(c),s.value}catch(r){return console.error("Error searching listings:",r),[]}},createListing:async t=>{var e;debugger;const r=S();try{const i={user_id:(e=r.user)==null?void 0:e.id,...t};i.location&&(i.location=`POINT(${i.location.lng} ${i.location.lat})`);const{data:n,error:o}=await a.from("listings").insert([i]).select("*, user:users!listings_user_id_fkey(id, full_name, avatar_url)").single();if(o)throw o;if(!n)throw new Error("No data returned from insert");return s.value.unshift(c(n)),n}catch(i){console.error("Error creating listing:",i)}},updateListing:async(t,r)=>{try{const{data:e,error:i}=await a.from("listings").update(r).eq("id",t).select("*, user:users!listings_user_id_fkey(id, full_name, avatar_url)").single();if(i)throw i;if(e){const n=s.value.findIndex(o=>o.id===t);n!==-1&&(s.value[n]={...s.value[n],...e})}}catch(e){console.error("Error updating listing:",e)}},deleteListing:async t=>{try{const{error:r}=await a.from("listings").delete().eq("id",t);if(r)throw r}catch(r){console.error("Error deleting listing:",r)}}}});export{B as u};
//# sourceMappingURL=listings-D2fJ6JDs.js.map
