{"version":3,"file":"location-2vzTZ4MP.js","sources":["../../src/stores/location.ts"],"sourcesContent":["import { defineStore } from 'pinia'\nimport { ref, watch } from 'vue'\nimport { LocationService } from '@/services/location'\nimport { MapView } from '@/types'\n\ninterface GeoLocation {\n  latitude: number\n  longitude: number\n  address?: string\n  source?: 'manual' | 'geocoded'\n}\n\nexport const useLocationStore = defineStore('location', () => {\n  // For browsing/filtering\n  const viewingLocation = ref<MapView | null>(null)\n  // For request creation\n  const creationLocation = ref<Location | null>(null)\n\n  // Load viewingLocation from localStorage if available\n  const LOCAL_STORAGE_KEY = 'kindr_viewing_location'\n  const stored = localStorage.getItem(LOCAL_STORAGE_KEY)\n  if (stored) {\n    try {\n      viewingLocation.value = JSON.parse(stored)\n    } catch (e) {\n      // Ignore parse errors\n    }\n  }\n\n  // Watcher to persist viewingLocation changes\n  watch(\n    viewingLocation,\n    loc => {\n      if (loc) {\n        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(loc))\n      } else {\n        localStorage.removeItem(LOCAL_STORAGE_KEY)\n      }\n    },\n    { deep: true },\n  )\n\n  // Setters\n  function setViewingLocation(loc: MapView | null) {\n    viewingLocation.value = loc\n  }\n  function setCreationLocation(loc: Location | null) {\n    creationLocation.value = loc\n  }\n  function clearViewingLocation() {\n    viewingLocation.value = null\n  }\n  function clearCreationLocation() {\n    creationLocation.value = null\n  }\n\n  // Geocode address for manual entry\n  async function geocodeAddress(address: string): Promise<GeoLocation | null> {\n    try {\n      const result = await LocationService.geocodeAddress(address)\n      return {\n        latitude: result.latitude,\n        longitude: result.longitude,\n        address: result.formatted_address,\n        source: 'geocoded',\n      }\n    } catch (e) {\n      return null\n    }\n  }\n\n  // Reverse geocode coordinates\n  async function reverseGeocode(lat: number, lng: number): Promise<string> {\n    return LocationService.reverseGeocode(lat, lng)\n  }\n\n  return {\n    viewingLocation,\n    creationLocation,\n    setViewingLocation,\n    setCreationLocation,\n    clearViewingLocation,\n    clearCreationLocation,\n    geocodeAddress,\n    reverseGeocode,\n  }\n})\n"],"names":["useLocationStore","defineStore","viewingLocation","ref","creationLocation","LOCAL_STORAGE_KEY","stored","watch","loc","setViewingLocation","setCreationLocation","clearViewingLocation","clearCreationLocation","geocodeAddress","address","result","LocationService","reverseGeocode","lat","lng"],"mappings":"iIAYa,MAAAA,EAAmBC,EAAY,WAAY,IAAM,CAEtD,MAAAC,EAAkBC,EAAoB,IAAI,EAE1CC,EAAmBD,EAAqB,IAAI,EAG5CE,EAAoB,yBACpBC,EAAS,aAAa,QAAQD,CAAiB,EACrD,GAAIC,EACE,GAAA,CACcJ,EAAA,MAAQ,KAAK,MAAMI,CAAM,OAC/B,CAAA,CAMdC,EACEL,EACOM,GAAA,CACDA,EACF,aAAa,QAAQH,EAAmB,KAAK,UAAUG,CAAG,CAAC,EAE3D,aAAa,WAAWH,CAAiB,CAE7C,EACA,CAAE,KAAM,EAAK,CACf,EAGA,SAASI,EAAmBD,EAAqB,CAC/CN,EAAgB,MAAQM,CAAA,CAE1B,SAASE,EAAoBF,EAAsB,CACjDJ,EAAiB,MAAQI,CAAA,CAE3B,SAASG,GAAuB,CAC9BT,EAAgB,MAAQ,IAAA,CAE1B,SAASU,GAAwB,CAC/BR,EAAiB,MAAQ,IAAA,CAI3B,eAAeS,EAAeC,EAA8C,CACtE,GAAA,CACF,MAAMC,EAAS,MAAMC,EAAgB,eAAeF,CAAO,EACpD,MAAA,CACL,SAAUC,EAAO,SACjB,UAAWA,EAAO,UAClB,QAASA,EAAO,kBAChB,OAAQ,UACV,OACU,CACH,OAAA,IAAA,CACT,CAIa,eAAAE,EAAeC,EAAaC,EAA8B,CAChE,OAAAH,EAAgB,eAAeE,EAAKC,CAAG,CAAA,CAGzC,MAAA,CACL,gBAAAjB,EACA,iBAAAE,EACA,mBAAAK,EACA,oBAAAC,EACA,qBAAAC,EACA,sBAAAC,EACA,eAAAC,EACA,eAAAI,CACF,CACF,CAAC"}