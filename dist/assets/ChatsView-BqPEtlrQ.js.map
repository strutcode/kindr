{"version":3,"file":"ChatsView-BqPEtlrQ.js","sources":["../../src/components/chat/ChatListItem.vue","../../src/components/chat/ChatList.vue","../../src/components/chat/ChatMessage.vue","../../src/components/chat/ChatWindow.vue","../../src/views/ChatsView.vue"],"sourcesContent":["<template>\n  <div\n    :class=\"['chat-list-item', { selected: selected, unread: hasUnreadMessages }]\"\n    @click=\"$emit('select')\"\n  >\n    <div class=\"chat-avatar\">\n      <img\n        v-if=\"chat.other_user?.avatar_url\"\n        :src=\"chat.other_user.avatar_url\"\n        :alt=\"chat.other_user.full_name || 'User'\"\n        class=\"avatar-image\"\n      />\n      <div v-else class=\"avatar-placeholder\">\n        <Icon icon=\"tabler:user-filled\" class=\"h-7 w-7 text-gray-500\" />\n      </div>\n    </div>\n\n    <div class=\"chat-content\">\n      <div class=\"chat-header\">\n        <h3 class=\"chat-name\">{{ chat.other_user?.full_name || 'Anonymous' }}</h3>\n        <span class=\"chat-time\">{{ formatTime(chat.last_message_at) }}</span>\n      </div>\n\n      <div class=\"chat-info\">\n        <p class=\"listing-title\">{{ chat.listing?.title || 'Unknown listing' }}</p>\n        <Chip\n          v-if=\"chat.listing?.category\"\n          :label=\"categoryLabels[chat.listing.category]\"\n          :color=\"categoryColors[chat.listing.category]\"\n          size=\"xs\"\n        />\n      </div>\n\n      <div v-if=\"chat.last_message\" class=\"last-message\">\n        <p class=\"message-preview\">\n          <span v-if=\"chat.last_message.message_type === 'image'\" class=\"flex items-center\">\n            <svg class=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                stroke-width=\"2\"\n                d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\"\n              />\n            </svg>\n            Photo\n          </span>\n          <span v-else>{{ chat.last_message.content }}</span>\n        </p>\n\n        <div v-if=\"hasUnreadMessages\" class=\"unread-indicator\">\n          {{ unreadCount > 99 ? '99+' : unreadCount }}\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import { computed } from 'vue'\n  import { useAuthStore } from '@/stores/auth'\n  import type { Chat } from '@/types'\n  import Chip from '@/components/widgets/Chip.vue'\n  import { Icon } from '@iconify/vue'\n\n  interface Props {\n    chat: Chat\n    selected: boolean\n  }\n\n  const props = defineProps<Props>()\n\n  defineEmits<{\n    select: []\n  }>()\n\n  const authStore = useAuthStore()\n\n  const categoryLabels = {\n    'free-stuff': 'Free Stuff',\n    'help-needed': 'Help Needed',\n    'skills-offered': 'Skills Offered',\n  }\n\n  const categoryColors = {\n    'free-stuff': 'green' as const,\n    'help-needed': 'blue' as const,\n    'skills-offered': 'purple' as const,\n  }\n\n  const hasUnreadMessages = computed(() => {\n    if (!authStore.user) return false\n\n    if (props.chat.requester_id === authStore.user.id) {\n      return props.chat.requester_unread_count > 0\n    } else {\n      return props.chat.owner_unread_count > 0\n    }\n  })\n\n  const unreadCount = computed(() => {\n    if (!authStore.user) return 0\n\n    if (props.chat.requester_id === authStore.user.id) {\n      return props.chat.requester_unread_count\n    } else {\n      return props.chat.owner_unread_count\n    }\n  })\n\n  const formatTime = (timestamp: string) => {\n    const date = new Date(timestamp)\n    const now = new Date()\n    const diffMs = now.getTime() - date.getTime()\n    const diffMinutes = Math.floor(diffMs / (1000 * 60))\n    const diffHours = Math.floor(diffMs / (1000 * 60 * 60))\n    const diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24))\n\n    if (diffMinutes < 1) {\n      return 'Just now'\n    } else if (diffMinutes < 60) {\n      return `${diffMinutes}m`\n    } else if (diffHours < 24) {\n      return `${diffHours}h`\n    } else if (diffDays < 7) {\n      return `${diffDays}d`\n    } else {\n      return date.toLocaleDateString(undefined, { month: 'short', day: 'numeric' })\n    }\n  }\n</script>\n\n<style scoped>\n  .chat-list-item {\n    @apply flex p-4 cursor-pointer transition-colors;\n    @apply hover:bg-gray-50;\n  }\n\n  .chat-list-item.selected {\n    @apply bg-blue-50 border-r-2 border-blue-500;\n  }\n\n  .chat-list-item.unread {\n    @apply bg-blue-50 bg-opacity-50;\n  }\n\n  .chat-avatar {\n    @apply flex-shrink-0 mr-3;\n  }\n\n  .avatar-image {\n    @apply w-12 h-12 rounded-full object-cover;\n  }\n\n  .avatar-placeholder {\n    @apply w-12 h-12 rounded-full bg-gray-300 flex items-center justify-center;\n  }\n\n  .avatar-icon {\n    @apply w-6 h-6 text-gray-600;\n  }\n\n  .chat-content {\n    @apply flex-1 min-w-0;\n  }\n\n  .chat-header {\n    @apply flex items-start justify-between mb-1;\n  }\n\n  .chat-name {\n    @apply font-medium text-gray-900 truncate;\n  }\n\n  .chat-time {\n    @apply text-xs text-gray-500 flex-shrink-0 ml-2;\n  }\n\n  .chat-info {\n    @apply flex items-center gap-2 mb-1;\n  }\n\n  .listing-title {\n    @apply text-sm text-gray-600 truncate flex-1;\n  }\n\n  .last-message {\n    @apply flex items-center justify-between;\n  }\n\n  .message-preview {\n    @apply text-sm text-gray-500 truncate flex-1;\n  }\n\n  .unread-indicator {\n    @apply bg-blue-500 text-white text-xs rounded-full px-2 py-1 ml-2;\n    @apply min-w-[20px] text-center flex-shrink-0;\n  }\n</style>\n","<template>\n  <div class=\"chat-list\">\n    <!-- Header -->\n    <div class=\"chat-list-header\">\n      <h2 class=\"text-lg font-semibold text-gray-900\">Messages</h2>\n      <div v-if=\"loading\" class=\"text-sm text-gray-500\">Loading...</div>\n    </div>\n\n    <!-- Chat list -->\n    <div class=\"chat-list-content\">\n      <div v-if=\"chats.length === 0 && !loading\" class=\"empty-state\">\n        <Icon icon=\"tabler:message-circle\" class=\"mx-auto h-8 w-8 text-gray-400 mb-3\" />\n        <p class=\"text-sm text-gray-500 text-center\">No messages yet</p>\n        <p class=\"text-xs text-gray-400 text-center mt-1\">Start a conversation about a listing</p>\n      </div>\n\n      <div v-else class=\"chat-items\">\n        <ChatListItem\n          v-for=\"chat in chats\"\n          :key=\"chat.id\"\n          :chat=\"chat\"\n          :selected=\"chat.id === selectedChatId\"\n          @select=\"$emit('select-chat', chat.id)\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import { defineEmits } from 'vue'\n  import type { Chat } from '@/types'\n  import ChatListItem from './ChatListItem.vue'\n  import { Icon } from '@iconify/vue'\n\n  interface Props {\n    chats: Chat[]\n    loading: boolean\n    selectedChatId: string | null\n  }\n\n  defineProps<Props>()\n\n  defineEmits<{\n    'select-chat': [chatId: string]\n  }>()\n</script>\n\n<style scoped>\n  .chat-list {\n    @apply flex flex-col h-full;\n  }\n\n  .chat-list-header {\n    @apply p-4 border-b border-gray-200 flex items-center justify-between;\n  }\n\n  .chat-list-content {\n    @apply flex-1 overflow-y-auto;\n  }\n\n  .empty-state {\n    @apply flex flex-col items-center justify-center h-full px-4 py-8;\n  }\n\n  .chat-items {\n    @apply divide-y divide-gray-100;\n  }\n</style>\n","<template>\n  <div :class=\"['message', { 'own-message': isOwn, 'other-message': !isOwn }]\">\n    <div v-if=\"!isOwn\" class=\"message-avatar\">\n      <img\n        v-if=\"message.sender_avatar_url\"\n        :src=\"message.sender_avatar_url\"\n        :alt=\"message.sender_name\"\n        class=\"avatar-image\"\n      />\n      <div v-else class=\"avatar-placeholder\">\n        <Icon icon=\"tabler:user-filled\" class=\"h-5 w-5 text-gray-500\" />\n      </div>\n    </div>\n\n    <div class=\"message-content\">\n      <div v-if=\"!isOwn\" class=\"sender-name\">{{ message.sender_name }}</div>\n\n      <div class=\"message-bubble\">\n        <!-- Text message -->\n        <div v-if=\"message.message_type === 'text'\" class=\"text-message\">\n          {{ message.content }}\n        </div>\n\n        <!-- Image message -->\n        <div v-else-if=\"message.message_type === 'image'\" class=\"image-message\">\n          <img\n            :src=\"message.image_url\"\n            :alt=\"'Image from ' + message.sender_name\"\n            class=\"message-image\"\n            @click=\"openImageModal\"\n          />\n        </div>\n      </div>\n\n      <div class=\"message-time\">\n        {{ formatTime(message.created_at) }}\n      </div>\n    </div>\n\n    <!-- Image modal -->\n    <div\n      v-if=\"showImageModal && message.message_type === 'image'\"\n      class=\"image-modal\"\n      @click=\"closeImageModal\"\n    >\n      <div class=\"image-modal-content\" @click.stop>\n        <img\n          :src=\"message.image_url\"\n          :alt=\"'Image from ' + message.sender_name\"\n          class=\"modal-image\"\n        />\n        <button @click=\"closeImageModal\" class=\"close-modal-button\">\n          <Icon icon=\"tabler:user-filled\" class=\"h-6 w-6 text-gray-500\" />\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import { ref } from 'vue'\n  import type { ChatMessage as ChatMessageType } from '@/types'\n  import { Icon } from '@iconify/vue'\n\n  interface Props {\n    message: ChatMessageType\n    isOwn: boolean\n  }\n\n  defineProps<Props>()\n\n  const showImageModal = ref(false)\n\n  const openImageModal = () => {\n    showImageModal.value = true\n  }\n\n  const closeImageModal = () => {\n    showImageModal.value = false\n  }\n\n  const formatTime = (timestamp: string) => {\n    const date = new Date(timestamp)\n    return date.toLocaleTimeString(undefined, {\n      hour: 'numeric',\n      minute: '2-digit',\n      hour12: true,\n    })\n  }\n</script>\n\n<style scoped>\n  .message {\n    @apply flex gap-3;\n  }\n\n  .own-message {\n    @apply flex-row-reverse;\n  }\n\n  .other-message {\n    @apply flex-row;\n  }\n\n  .message-avatar {\n    @apply flex-shrink-0;\n  }\n\n  .avatar-image {\n    @apply w-8 h-8 rounded-full object-cover;\n  }\n\n  .avatar-placeholder {\n    @apply w-8 h-8 rounded-full bg-gray-300 flex items-center justify-center;\n  }\n\n  .avatar-icon {\n    @apply w-4 h-4 text-gray-600;\n  }\n\n  .message-content {\n    @apply max-w-xs md:max-w-sm lg:max-w-md;\n  }\n\n  .own-message .message-content {\n    @apply items-end;\n  }\n\n  .other-message .message-content {\n    @apply items-start;\n  }\n\n  .sender-name {\n    @apply text-xs text-gray-500 mb-1 px-1;\n  }\n\n  .message-bubble {\n    @apply rounded-lg px-3 py-2 break-words;\n  }\n\n  .own-message .message-bubble {\n    @apply bg-blue-500 text-white rounded-br-sm;\n  }\n\n  .other-message .message-bubble {\n    @apply bg-white text-gray-900 border border-gray-200 rounded-bl-sm;\n  }\n\n  .text-message {\n    @apply text-sm leading-relaxed;\n  }\n\n  .image-message {\n    @apply p-0;\n  }\n\n  .message-image {\n    @apply max-w-full h-auto rounded-lg cursor-pointer;\n    @apply hover:opacity-90 transition-opacity;\n    max-width: 200px;\n    max-height: 200px;\n    object-fit: cover;\n  }\n\n  .message-time {\n    @apply text-xs text-gray-400 mt-1 px-1;\n  }\n\n  .own-message .message-time {\n    @apply text-right;\n  }\n\n  .other-message .message-time {\n    @apply text-left;\n  }\n\n  .image-modal {\n    @apply fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50;\n    @apply p-4;\n  }\n\n  .image-modal-content {\n    @apply relative max-w-4xl max-h-full;\n  }\n\n  .modal-image {\n    @apply max-w-full max-h-full object-contain;\n  }\n\n  .close-modal-button {\n    @apply absolute top-4 right-4 bg-black bg-opacity-50 text-white;\n    @apply rounded-full p-2 hover:bg-opacity-75 transition-all;\n  }\n</style>\n","<template>\n  <div class=\"chat-window\">\n    <!-- Messages area -->\n    <div class=\"messages-container\" ref=\"messagesContainer\">\n      <!-- Load more button -->\n      <div v-if=\"hasMore\" class=\"load-more-container\">\n        <button @click=\"loadMoreMessages\" class=\"load-more-button\">Load older messages</button>\n      </div>\n\n      <!-- Messages -->\n      <div class=\"messages-list\">\n        <ChatMessage\n          v-for=\"message in reversedMessages\"\n          :key=\"message.id\"\n          :message=\"message\"\n          :is-own=\"message.sender_id === authStore.user?.id\"\n        />\n      </div>\n\n      <!-- Scroll to bottom anchor -->\n      <div ref=\"bottomAnchor\"></div>\n    </div>\n\n    <!-- Message input -->\n    <div class=\"message-input-container\">\n      <div class=\"message-input-wrapper\">\n        <!-- Image upload button -->\n        <button\n          variant=\"ghost\"\n          @click=\"triggerImageUpload\"\n          class=\"image-upload-button\"\n          title=\"Send image\"\n        >\n          <Icon icon=\"tabler:photo-up\" class=\"w-5 h-5 text-gray-600\" />\n        </button>\n\n        <!-- Text input -->\n        <input\n          v-model=\"messageText\"\n          type=\"text\"\n          placeholder=\"Type a message...\"\n          class=\"message-input\"\n          @keydown.enter=\"handleSendMessage\"\n          :disabled=\"sending\"\n        />\n\n        <!-- Send button -->\n        <button\n          @click=\"handleSendMessage\"\n          :disabled=\"!messageText.trim() || sending\"\n          class=\"send-button\"\n        >\n          <Icon v-if=\"!sending\" icon=\"tabler:send\" class=\"w-5 h-5\" />\n          <Icon\n            v-else\n            icon=\"svg-spinners:90-ring-with-bg\"\n            class=\"w-5 h-5 animate-spin text-primary-600\"\n          />\n        </button>\n\n        <!-- Hidden file input -->\n        <input\n          ref=\"fileInput\"\n          type=\"file\"\n          accept=\"image/*\"\n          @change=\"handleImageSelect\"\n          class=\"hidden\"\n        />\n      </div>\n\n      <!-- Image preview -->\n      <div v-if=\"selectedImage\" class=\"image-preview-container\">\n        <div class=\"image-preview\">\n          <img :src=\"selectedImageUrl\" alt=\"Selected image\" class=\"preview-image\" />\n          <Button @click=\"cancelImageUpload\" icon-left=\"tabler-x\" class=\"cancel-image-button\" />\n        </div>\n        <button @click=\"handleSendImage\" :disabled=\"sending\" class=\"send-image-button\">\n          <span v-if=\"!sending\">Send Photo</span>\n          <span v-else>Sending...</span>\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import { ref, computed, nextTick, watch, onMounted } from 'vue'\n\n  import type { Chat, ChatMessage as ChatMessageType } from '@/types'\n  import { useAuthStore } from '@/stores/auth'\n  import { useChatStore } from '@/stores/chat'\n\n  import ChatMessage from './ChatMessage.vue'\n  import { Icon } from '@iconify/vue'\n  import Button from '../widgets/Button.vue'\n\n  interface Props {\n    chat: Chat\n    messages: ChatMessageType[]\n  }\n\n  const props = defineProps<Props>()\n\n  const authStore = useAuthStore()\n  const chatStore = useChatStore()\n\n  const messageText = ref('')\n  const sending = ref(false)\n  const loading = ref(false)\n  const messagesContainer = ref<HTMLElement>()\n  const bottomAnchor = ref<HTMLElement>()\n  const fileInput = ref<HTMLInputElement>()\n  const selectedImage = ref<File | null>(null)\n  const selectedImageUrl = ref<string>('')\n\n  const reversedMessages = computed(() => [...props.messages].reverse())\n  const hasMore = computed(() => chatStore.hasMore[props.chat.id] ?? false)\n\n  // Scroll to bottom\n  const scrollToBottom = (smooth = true) => {\n    nextTick(() => {\n      if (bottomAnchor.value) {\n        bottomAnchor.value.scrollIntoView({\n          behavior: smooth ? 'smooth' : 'auto',\n          block: 'end',\n        })\n      }\n    })\n  }\n\n  // Handle sending text message\n  const handleSendMessage = async () => {\n    const content = messageText.value.trim()\n    if (!content || sending.value) return\n\n    sending.value = true\n    try {\n      await chatStore.sendMessage(props.chat.id, content)\n      messageText.value = ''\n      scrollToBottom()\n    } catch (error) {\n      console.error('Failed to send message:', error)\n    } finally {\n      sending.value = false\n    }\n  }\n\n  // Trigger image upload\n  const triggerImageUpload = () => {\n    fileInput.value?.click()\n  }\n\n  // Handle image selection\n  const handleImageSelect = (event: Event) => {\n    const target = event.target as HTMLInputElement\n    const file = target.files?.[0]\n\n    if (file) {\n      selectedImage.value = file\n      selectedImageUrl.value = URL.createObjectURL(file)\n    }\n  }\n\n  // Handle sending image\n  const handleSendImage = async () => {\n    if (!selectedImage.value || sending.value) return\n\n    sending.value = true\n    try {\n      await chatStore.uploadChatImage(selectedImage.value, props.chat.id)\n      cancelImageUpload()\n      scrollToBottom()\n    } catch (error) {\n      console.error('Failed to send image:', error)\n    } finally {\n      sending.value = false\n    }\n  }\n\n  // Cancel image upload\n  const cancelImageUpload = () => {\n    selectedImage.value = null\n    if (selectedImageUrl.value) {\n      URL.revokeObjectURL(selectedImageUrl.value)\n      selectedImageUrl.value = ''\n    }\n    if (fileInput.value) {\n      fileInput.value.value = ''\n    }\n  }\n\n  // Load more messages\n  const loadMoreMessages = () => {\n    try {\n      loading.value = true\n      chatStore.loadMoreMessages(props.chat.id)\n    } catch (error) {\n      console.error('Failed to load more messages:', error)\n    } finally {\n      loading.value = false\n    }\n  }\n\n  // Watch for new messages and scroll to bottom\n  watch(\n    () => props.messages.length,\n    (newLength, oldLength) => {\n      if (newLength > oldLength) {\n        scrollToBottom()\n      }\n    },\n  )\n\n  // Scroll to bottom on mount\n  onMounted(() => {\n    scrollToBottom(false)\n  })\n</script>\n\n<style scoped>\n  .chat-window {\n    @apply flex flex-col h-full bg-gray-50;\n  }\n\n  .messages-container {\n    @apply flex-1 content-end overflow-y-auto p-4;\n    @apply md:p-8 lg:p-10;\n  }\n\n  .load-more-container {\n    @apply text-center pb-4;\n  }\n\n  .load-more-button {\n    @apply px-4 py-2 text-sm text-blue-600 hover:text-blue-800;\n    @apply border border-blue-200 rounded-full hover:bg-blue-50;\n    @apply transition-colors;\n  }\n\n  .messages-list {\n    @apply space-y-4;\n  }\n\n  .message-input-container {\n    @apply border-t border-gray-200 bg-white p-4;\n  }\n\n  .message-input-wrapper {\n    @apply flex items-center space-x-2;\n  }\n\n  .image-upload-button {\n    @apply p-2 text-gray-500 hover:text-gray-700 hover:bg-gray-100;\n    @apply rounded-full transition-colors;\n  }\n\n  .message-input {\n    @apply flex-1 px-4 py-2 border border-gray-300 rounded-full;\n    @apply focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent;\n    @apply disabled:bg-gray-100 disabled:cursor-not-allowed;\n  }\n\n  .send-button {\n    @apply p-2 text-white bg-blue-500 rounded-full;\n    @apply hover:bg-blue-600 disabled:bg-gray-300 disabled:cursor-not-allowed;\n    @apply transition-colors;\n  }\n\n  .image-preview-container {\n    @apply mt-3 p-3 bg-gray-50 rounded-lg;\n  }\n\n  .image-preview {\n    @apply relative inline-block;\n  }\n\n  .preview-image {\n    @apply w-20 h-20 object-cover rounded-lg;\n  }\n\n  .cancel-image-button {\n    @apply absolute -top-2 -right-2 p-1 bg-red-500 text-white rounded-full;\n    @apply hover:bg-red-600 transition-colors;\n  }\n\n  .send-image-button {\n    @apply mt-2 px-4 py-2 bg-blue-500 text-white rounded-lg;\n    @apply hover:bg-blue-600 disabled:bg-gray-300 disabled:cursor-not-allowed;\n    @apply transition-colors;\n  }\n</style>\n","<template>\n  <div class=\"chats-container\">\n    <!-- Desktop Layout -->\n    <div class=\"hidden md:flex h-full\">\n      <!-- Chat List Sidebar -->\n      <div class=\"w-80 border-r border-gray-200 flex flex-col bg-white\">\n        <ChatList\n          :chats=\"chatStore.sortedChats\"\n          :loading=\"chatStore.loading\"\n          :selected-chat-id=\"selectedChatId\"\n          @select-chat=\"handleChatSelect\"\n        />\n      </div>\n\n      <!-- Chat View -->\n      <div class=\"flex-1 flex flex-col\">\n        <ChatWindow\n          v-if=\"selectedChatId && currentChat\"\n          :chat=\"currentChat\"\n          :messages=\"chatStore.currentMessages\"\n        />\n        <div v-else class=\"flex-1 flex items-center justify-center text-gray-500\">\n          <div class=\"text-center\">\n            <Icon icon=\"tabler:message-circle\" class=\"mx-auto h-12 w-12 text-gray-400 mb-4\" />\n            <p class=\"text-lg font-medium\">Select a chat to start messaging</p>\n            <p class=\"text-sm text-gray-400 mt-1\">Choose from your existing conversations</p>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Mobile Layout -->\n    <div class=\"md:hidden h-full flex flex-col\">\n      <!-- Show chat list if no chat selected -->\n      <div v-if=\"!selectedChatId\" class=\"flex-1\">\n        <div class=\"bg-white border-b border-gray-200 px-4 py-3\">\n          <h1 class=\"text-lg font-semibold text-gray-900\">Messages</h1>\n        </div>\n        <ChatList\n          :chats=\"chatStore.sortedChats\"\n          :loading=\"chatStore.loading\"\n          :selected-chat-id=\"null\"\n          @select-chat=\"handleChatSelect\"\n        />\n      </div>\n\n      <!-- Show individual chat -->\n      <div v-else-if=\"currentChat\" class=\"flex-1 flex flex-col\">\n        <!-- Mobile chat header -->\n        <div class=\"bg-white border-b border-gray-200 px-4 py-3 flex items-center\">\n          <Button\n            variant=\"ghost\"\n            size=\"lg\"\n            @click=\"handleBackToList\"\n            icon-left=\"tabler:chevron-left\"\n            class=\"mr-3 p-1 text-2xl text-gray-600 hover:bg-primary-100\"\n          />\n          <div class=\"flex items-center\">\n            <img\n              v-if=\"currentChat.other_user?.avatar_url\"\n              :src=\"currentChat.other_user.avatar_url\"\n              :alt=\"currentChat.other_user.full_name || 'User'\"\n              class=\"w-8 h-8 rounded-full mr-3\"\n            />\n            <div\n              class=\"w-8 h-8 rounded-full bg-gray-300 mr-3 flex items-center justify-center\"\n              v-else\n            >\n              <Icon icon=\"tabler:user-filled\" class=\"h-5 w-5 text-gray-500\" />\n            </div>\n            <div>\n              <h2 class=\"font-medium text-gray-900\">\n                {{ currentChat.other_user?.full_name || 'Anonymous' }}\n              </h2>\n              <p class=\"text-sm text-gray-500\">{{ currentChat.listing?.title }}</p>\n            </div>\n          </div>\n        </div>\n\n        <ChatWindow :chat=\"currentChat\" :messages=\"chatStore.currentMessages\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import { ref, computed, onMounted, watch } from 'vue'\n  import { useRoute, useRouter } from 'vue-router'\n  import { useChatStore } from '@/stores/chat'\n  import ChatList from '@/components/chat/ChatList.vue'\n  import ChatWindow from '@/components/chat/ChatWindow.vue'\n  import { Icon } from '@iconify/vue'\n  import Button from '@/components/widgets/Button.vue'\n\n  const route = useRoute()\n  const router = useRouter()\n  const chatStore = useChatStore()\n\n  const selectedChatId = ref<string | null>(null)\n\n  const currentChat = computed(() =>\n    selectedChatId.value ? chatStore.chats.find(c => c.id === selectedChatId.value) : null,\n  )\n\n  // Handle chat selection\n  const handleChatSelect = (chatId: string) => {\n    selectedChatId.value = chatId\n    chatStore.setCurrentChat(chatId)\n\n    // Update URL for desktop\n    if (window.innerWidth >= 768) {\n      router.replace({ name: 'chat', params: { id: chatId } })\n    } else {\n      router.push({ name: 'chat', params: { id: chatId } })\n    }\n  }\n\n  // Handle back to list (mobile)\n  const handleBackToList = () => {\n    selectedChatId.value = null\n    chatStore.setCurrentChat(null)\n    router.push({ name: 'chats' })\n  }\n\n  // Watch route params for chat ID\n  watch(\n    () => route.params.id,\n    newId => {\n      if (newId && typeof newId === 'string') {\n        selectedChatId.value = newId\n        chatStore.setCurrentChat(newId)\n      } else if (route.name === 'chats') {\n        selectedChatId.value = null\n        chatStore.setCurrentChat(null)\n      }\n    },\n    { immediate: true },\n  )\n\n  // Initialize chat store on mount\n  onMounted(() => {\n    chatStore.initialize()\n  })\n</script>\n\n<style scoped>\n  .chats-container {\n    @apply h-screen flex flex-col;\n    height: calc(100vh - 3.5rem); /* Account for navbar height */\n  }\n\n  @media (min-width: 768px) {\n    .chats-container {\n      height: calc(100vh - 4rem); /* Account for larger navbar on desktop */\n    }\n  }\n</style>\n"],"names":["props","__props","authStore","useAuthStore","categoryLabels","categoryColors","hasUnreadMessages","computed","unreadCount","formatTime","timestamp","date","diffMs","diffMinutes","diffHours","diffDays","_createElementBlock","_normalizeClass","selected","$emit","_createElementVNode","_hoisted_1","chat","_openBlock","_hoisted_3","_createVNode","_unref","Icon","_hoisted_4","_hoisted_5","_hoisted_6","_toDisplayString","_hoisted_7","_hoisted_8","_hoisted_9","_createBlock","Chip","_hoisted_10","_hoisted_11","_hoisted_12","_cache","_hoisted_14","_hoisted_2","loading","chats","_Fragment","_renderList","ChatListItem","selectedChatId","showImageModal","ref","openImageModal","closeImageModal","isOwn","message","chatStore","useChatStore","messageText","sending","messagesContainer","bottomAnchor","fileInput","selectedImage","selectedImageUrl","reversedMessages","hasMore","scrollToBottom","smooth","nextTick","handleSendMessage","content","error","triggerImageUpload","_a","handleImageSelect","event","file","handleSendImage","cancelImageUpload","loadMoreMessages","watch","newLength","oldLength","onMounted","ChatMessage","$event","Button","route","useRoute","router","useRouter","currentChat","c","handleChatSelect","chatId","handleBackToList","newId","ChatList","ChatWindow","_hoisted_13","_b","_hoisted_15","_c"],"mappings":"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"}