{"version":3,"file":"LocationSelector-569OudmH.js","sources":["../../src/components/widgets/LocationSelector.vue"],"sourcesContent":["<template>\n  <div class=\"location-selector\">\n    <div class=\"address-input\">\n      <Text\n        v-model=\"addressInput\"\n        placeholder=\"Type an address or location...\"\n        @enter=\"handleAddressSearch\"\n      />\n      <Button variant=\"gray\" @click=\"handleAddressSearch\" :loading=\"isGeocoding\" class=\"ml-4\">\n        Search\n      </Button>\n    </div>\n\n    <div class=\"map-picker\">\n      <Map\n        :center=\"selectedLocation\"\n        :zoom=\"zoom\"\n        :pins=\"selectedPin\"\n        @map-click=\"handleMapClick\"\n      />\n    </div>\n    <p class=\"mt-2 text-sm text-gray-500\">\n      Click on the map to select a location or search for an address above.\n    </p>\n\n    <div v-if=\"error\" class=\"mt-2 text-red-600 text-sm\">\n      {{ error }}\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import { computed, ref, watch } from 'vue'\n  import Map from '@/components/geo/Map.vue'\n  import Text from '@/components/widgets/Text.vue'\n  import { LocationService } from '@/services/location'\n  import type { Location } from '@/types'\n  import Button from './Button.vue'\n\n  interface Props {\n    modelValue?: Location | null\n    zoom?: number\n  }\n\n  const props = withDefaults(defineProps<Props>(), {\n    zoom: 13,\n  })\n\n  const emit = defineEmits<{\n    (e: 'update:modelValue', location: Location): void\n  }>()\n\n  const addressInput = ref('')\n  const selectedLocation = ref<Location>(props.modelValue || { lat: 34.0522, lng: -118.2437 })\n  const isGeocoding = ref(false)\n  const error = ref('')\n\n  const selectedPin = computed(() => [\n    {\n      ...selectedLocation.value,\n      color: '#d45f0d',\n    },\n  ])\n\n  const handleMapClick = async (location: { lat: number; lng: number }) => {\n    selectedLocation.value = location\n    emit('update:modelValue', location)\n\n    // Reverse geocode to get address\n    try {\n      const address = await LocationService.reverseGeocode(location.lat, location.lng)\n      addressInput.value = address\n      error.value = ''\n    } catch (err) {\n      console.error('Reverse geocoding failed:', err)\n    }\n  }\n\n  const handleAddressSearch = async () => {\n    if (!addressInput.value.trim()) return\n\n    isGeocoding.value = true\n    error.value = ''\n\n    try {\n      const result = await LocationService.geocodeAddress(addressInput.value)\n      const location = { lat: result.latitude, lng: result.longitude }\n\n      selectedLocation.value = location\n      emit('update:modelValue', location)\n    } catch (err) {\n      console.error('Geocoding failed:', err)\n      error.value = 'Could not find the specified location. Please try a different address.'\n    } finally {\n      isGeocoding.value = false\n    }\n  }\n\n  // Initialize address display when component loads with a location\n  const initializeAddress = async () => {\n    if (props.modelValue) {\n      try {\n        const address = await LocationService.reverseGeocode(\n          props.modelValue.lat,\n          props.modelValue.lng,\n        )\n        addressInput.value = address\n      } catch (err) {\n        console.error('Reverse geocoding failed on init:', err)\n      }\n    }\n  }\n\n  // Watch for prop changes\n  watch(\n    () => props.modelValue,\n    newValue => {\n      if (newValue) {\n        selectedLocation.value = newValue\n        initializeAddress()\n      }\n    },\n    { immediate: true },\n  )\n</script>\n\n<style scoped>\n  .address-input {\n    @apply flex mb-4;\n  }\n\n  .map-picker {\n    @apply relative h-96 border rounded;\n  }\n</style>\n"],"names":["props","__props","emit","__emit","addressInput","ref","selectedLocation","isGeocoding","error","selectedPin","computed","handleMapClick","location","address","LocationService","err","handleAddressSearch","result","initializeAddress","watch","newValue","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","Text","$event","Button","_cache","_hoisted_3","Map","zoom","_hoisted_4","_toDisplayString"],"mappings":"ifA4CE,MAAMA,EAAQC,EAIRC,EAAOC,EAIPC,EAAeC,EAAI,EAAE,EACrBC,EAAmBD,EAAcL,EAAM,YAAc,CAAE,IAAK,QAAS,IAAK,UAAW,EACrFO,EAAcF,EAAI,EAAK,EACvBG,EAAQH,EAAI,EAAE,EAEdI,EAAcC,EAAS,IAAM,CACjC,CACE,GAAGJ,EAAiB,MACpB,MAAO,SAAA,CACT,CACD,EAEKK,EAAiB,MAAOC,GAA2C,CACvEN,EAAiB,MAAQM,EACzBV,EAAK,oBAAqBU,CAAQ,EAG9B,GAAA,CACF,MAAMC,EAAU,MAAMC,EAAgB,eAAeF,EAAS,IAAKA,EAAS,GAAG,EAC/ER,EAAa,MAAQS,EACrBL,EAAM,MAAQ,SACPO,EAAK,CACJ,QAAA,MAAM,4BAA6BA,CAAG,CAAA,CAElD,EAEMC,EAAsB,SAAY,CACtC,GAAKZ,EAAa,MAAM,OAExB,CAAAG,EAAY,MAAQ,GACpBC,EAAM,MAAQ,GAEV,GAAA,CACF,MAAMS,EAAS,MAAMH,EAAgB,eAAeV,EAAa,KAAK,EAChEQ,EAAW,CAAE,IAAKK,EAAO,SAAU,IAAKA,EAAO,SAAU,EAE/DX,EAAiB,MAAQM,EACzBV,EAAK,oBAAqBU,CAAQ,QAC3BG,EAAK,CACJ,QAAA,MAAM,oBAAqBA,CAAG,EACtCP,EAAM,MAAQ,wEAAA,QACd,CACAD,EAAY,MAAQ,EAAA,EAExB,EAGMW,EAAoB,SAAY,CACpC,GAAIlB,EAAM,WACJ,GAAA,CACI,MAAAa,EAAU,MAAMC,EAAgB,eACpCd,EAAM,WAAW,IACjBA,EAAM,WAAW,GACnB,EACAI,EAAa,MAAQS,QACdE,EAAK,CACJ,QAAA,MAAM,oCAAqCA,CAAG,CAAA,CAG5D,EAGA,OAAAI,EACE,IAAMnB,EAAM,WACAoB,GAAA,CACNA,IACFd,EAAiB,MAAQc,EACPF,EAAA,EAEtB,EACA,CAAE,UAAW,EAAK,CACpB,UA1HAG,EAAA,EAAAC,EA2BM,MA3BNC,EA2BM,CA1BJC,EASM,MATNC,EASM,CARJC,EAIEC,EAAA,YAHSvB,EAAY,2CAAZA,EAAY,MAAAwB,GACrB,YAAY,iCACX,QAAOZ,0BAEVU,EAESG,EAAA,CAFD,QAAQ,OAAQ,QAAOb,EAAsB,QAAST,EAAW,MAAE,MAAM,MAAA,aAAO,IAExFuB,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAA,GAFwF,UAExF,CAAA,iCAGFN,EAOM,MAPNO,EAOM,CANJL,EAKEM,EAAA,CAJC,OAAQ1B,EAAgB,MACxB,KAAM2B,EAAI,KACV,KAAMxB,EAAW,MACjB,WAAWE,sCAGhBmB,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAN,EAEI,IAFD,CAAA,MAAM,8BAA6B,0EAEtC,EAAA,GAEWhB,EAAK,WAAhBc,EAEM,MAFNY,EAEMC,EADD3B,EAAK,KAAA,EAAA,CAAA"}